{"version":3,"sources":["webpack:///./src/containers/HomePage/style.tsx","webpack:///./src/containers/HomePage/Intro/style.tsx","webpack:///./src/containers/HomePage/Intro/index.tsx","webpack:///./src/containers/HomePage/Posts/style.tsx","webpack:///./src/containers/HomePage/Posts/index.tsx","webpack:///./src/containers/HomePage/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Pagination/pagination.style.tsx","webpack:///./src/components/Pagination/pagination.tsx"],"names":["PersonalBlogWrapper","styled","div","IntroWrapper","themeGet","IntroTitle","h1","Desciption","p","Intro","about","site","siteMetadata","BlogPostsWrapper","Posts","Data","allMarkdownRemark","edges","TotalPage","allSitePage","nodes","context","numPages","CurrentPage","currentPage","map","node","title","frontmatter","fields","slug","key","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","nextLink","totalPage","PersonalBlog","props","pageQuery","PersonalBlogPage","data","HomePage","PaginationWrapper","PrevPage","NextPage","PageNumber","Pagination","prevLink","className","to","aria-label"],"mappings":"2dAIeA,EAFaC,IAAOC,IAAV,iFAAGD,CAAH,M,wBCCZE,EAAeF,IAAOC,IAAV,sEAAGD,CAAH,0aAMIG,YAAS,0BAA2B,YA4CpDC,GA7BaJ,IAAOC,IAAV,oEAAGD,CAAH,6eAMDG,YAAS,0BAA2B,YAuBhCH,IAAOK,GAAV,oEAAGL,CAAH,iRAGNG,YAAS,eAAgB,yBAC/BA,YAAS,mBAAoB,aAY3BG,EAAaN,IAAOO,EAAV,oEAAGP,CAAH,uFACZG,YAAS,mBAAoB,WACzBA,YAAS,cAAe,MACtBA,YAAS,mBAAoB,MCZ/BK,EAzBoC,WACjD,IAWQC,EAXK,OAWUC,KAAKC,aAApBF,MAER,OACE,kBAACP,EAAD,KACE,kBAACE,EAAD,qBACe,4CAEf,kBAACE,EAAD,KAAaG,K,oCCvBJG,EA7BUZ,IAAOC,IAAV,8EAAGD,CAAH,kjBC2FPa,EArFoC,WACjD,IAAMC,EAAO,OA8CPD,EAAQC,EAAKC,kBAAkBC,MAC/BC,EAAYH,EAAKI,YAAYC,MAAM,GAAGC,QAAQC,SAC9CC,EAAcR,EAAKI,YAAYC,MAAM,GAAGC,QAAQG,YAEtD,OACE,gBAAC,EAAD,KACGV,EAAMW,KAAI,YAAmB,IAAhBC,EAAgB,EAAhBA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,gBAAC,IAAD,CACEC,IAAKL,EAAKG,OAAOC,KACjBH,MAAOA,EACPK,MAC4B,MAA1BN,EAAKE,YAAYK,MACb,KACAP,EAAKE,YAAYK,MAAMC,gBAAgBC,MAE7CC,IAAKV,EAAKG,OAAOC,KACjBO,YAAaX,EAAKE,YAAYS,aAAeX,EAAKY,QAClDC,KAAMb,EAAKE,YAAYW,KACvBC,KAAMd,EAAKE,YAAYY,UAK5BtB,GAAa,EACZ,gBAAC,IAAD,CACEuB,SAAS,UACTjB,YAAaD,EACbmB,UAAWxB,IAGX,KCrEKyB,EAXkD,SAAC,GAE5D,IADDC,EACC,oBACJ,OACE,gBAAC,EAAwBA,EACvB,gBAAC,EAAD,MACA,gBAAC,EAAD,Q,YCSOC,GAFEC,UAdU,SAACF,GAAe,IAC/BG,EAASH,EAATG,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpB,MAAOoB,EAAKpC,KAAKC,aAAae,MAC9BU,YAAaU,EAAKpC,KAAKC,aAAayB,cAEtC,kBAACW,EAAD,QAOmB,e,oJCnBZC,EAAoBhD,IAAOC,IAAV,wFAAGD,CAAH,qFAMjBiD,EAAWjD,IAAOC,IAAV,+EAAGD,CAAH,6YAKRG,YAAS,oBAaIA,YAAS,wBAKtB+C,EAAWlD,IAAOC,IAAV,+EAAGD,CAAH,6YAKRG,YAAS,oBAaIA,YAAS,iBAAkB,YAKxCgD,EAAanD,IAAOC,IAAV,iFAAGD,CAAH,MCNRoD,IA/B8C,SAAC,GAOxD,IANJC,EAMI,EANJA,SACAb,EAKI,EALJA,SACAjB,EAII,EAJJA,YACAkB,EAGI,EAHJA,UACAa,EAEI,EAFJA,UACGX,E,oIACC,kEACJ,OACE,gBAACK,EAAD,iBAAuBL,EAAvB,CAA8BW,UAAWA,IACvC,gBAACL,EAAD,KACGI,GACC,gBAAC,OAAD,CAAME,GAAE,GAAKF,EAAYG,aAAW,YAClC,gBAAC,IAAD,QAKN,gBAACL,EAAD,eAAuB5B,EAAvB,OAAyCkB,GAEzC,gBAACS,EAAD,KACGV,GACC,gBAAC,OAAD,CAAMe,GAAE,GAAKf,EAAYgB,aAAW,aAClC,gBAAC,IAAD,W","file":"component---src-pages-index-tsx-2f32f63f55de22cd5787.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst PersonalBlogWrapper = styled.div``\r\n\r\nexport default PersonalBlogWrapper\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const IntroWrapper = styled.div`\r\n  width: 610px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 150px 10px 0 10px;\r\n  text-align: center;\r\n  border-bottom: 1px solid ${themeGet(\"colors.lightBorderColor\", \"#ededed\")};\r\n  @media (max-width: 1400px) {\r\n    padding: 120px 10px 0 10px;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    padding: 100px 10px 0 10px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 70px 10px 0 10px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 50px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const IntroImage = styled.div`\r\n  width: 270px;\r\n  height: 270px;\r\n  padding: 30px;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  border: 1px solid ${themeGet(\"colors.lightBorderColor\", \"#ededed\")};\r\n  margin-bottom: 30px;\r\n  @media (max-width: 990px) {\r\n    width: 220px;\r\n    height: 220px;\r\n    padding: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    width: 180px;\r\n    height: 180px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    display: block;\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nexport const IntroTitle = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  font-family: ${themeGet(\"fontFamily.1\", \"'Poppins', sans-serif\")};\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`\r\n\r\nexport const Desciption = styled.p`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\r\n  line-height: ${themeGet(\"lineHeights.text\", \"2\")};\r\n  text-align: center;\r\n`\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { IntroWrapper, IntroTitle, Desciption } from \"./style\"\r\n// import {\r\n//   IoLogoFacebook,\r\n//   IoLogoTwitter,\r\n//   IoLogoInstagram,\r\n//   IoLogoGithub,\r\n// } from \"react-icons/io\"\r\n\r\ntype IntroProps = {}\r\n\r\n// const SocialLinks = [\r\n//   {\r\n//     icon: <IoLogoFacebook />,\r\n//     url: \"#\",\r\n//     tooltip: \"Facebook\",\r\n//   },\r\n//   {\r\n//     icon: <IoLogoInstagram />,\r\n//     url: \"#\",\r\n//     tooltip: \"Instagram\",\r\n//   },\r\n//   {\r\n//     icon: <IoLogoTwitter />,\r\n//     url: \"#\",\r\n//     tooltip: \"Twitter\",\r\n//   },\r\n//   {\r\n//     icon: <IoLogoGithub />,\r\n//     url: \"#\",\r\n//     tooltip: \"Github\",\r\n//   },\r\n// ]\r\n\r\nconst Intro: React.FunctionComponent<IntroProps> = () => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          about\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { about } = Data.site.siteMetadata\r\n\r\n  return (\r\n    <IntroWrapper>\r\n      <IntroTitle>\r\n        Bienvenido a <b>Comunidad TI</b>\r\n      </IntroTitle>\r\n      <Desciption>{about}</Desciption>\r\n      {/* <SocialProfile items={SocialLinks} /> */}\r\n    </IntroWrapper>\r\n  )\r\n}\r\n\r\nexport default Intro\r\n","import styled from \"styled-components\"\r\n\r\nconst BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\nexport default BlogPostsWrapper\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport PostCard from \"../../../components/PostCard/postCard\"\r\nimport Pagination from \"../../../components/Pagination/pagination\"\r\nimport BlogPostsWrapper from \"./style\"\r\n\r\ntype PostsProps = {}\r\n\r\nconst Posts: React.FunctionComponent<PostsProps> = () => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allSitePage(filter: { path: { eq: \"/page/1\" } }) {\r\n        nodes {\r\n          context {\r\n            numPages\r\n            currentPage\r\n          }\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n        filter: { fields: { draft: { eq: false } } } # add\r\n        limit: 4\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 300)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"DD [<span>] MMMM, YYYY [</span>]\", locale: \"es\")\r\n              title\r\n              description\r\n              tags\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 1170, maxHeight: 690, quality: 90) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const Posts = Data.allMarkdownRemark.edges\r\n  const TotalPage = Data.allSitePage.nodes[0].context.numPages\r\n  const CurrentPage = Data.allSitePage.nodes[0].context.currentPage\r\n\r\n  return (\r\n    <BlogPostsWrapper>\r\n      {Posts.map(({ node }: any) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <PostCard\r\n            key={node.fields.slug}\r\n            title={title}\r\n            image={\r\n              node.frontmatter.cover == null\r\n                ? null\r\n                : node.frontmatter.cover.childImageSharp.fluid\r\n            }\r\n            url={node.fields.slug}\r\n            description={node.frontmatter.description || node.excerpt}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n          />\r\n        )\r\n      })}\r\n\r\n      {TotalPage >> 1 ? (\r\n        <Pagination\r\n          nextLink=\"/page/2\"\r\n          currentPage={CurrentPage}\r\n          totalPage={TotalPage}\r\n        />\r\n      ) : (\r\n          \"\"\r\n        )}\r\n    </BlogPostsWrapper>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import * as React from \"react\"\r\nimport PersonalBlogWrapper from \"./style\"\r\nimport Intro from \"./Intro\"\r\nimport Posts from \"./Posts\"\r\n\r\ntype PersonalBlogProps = {}\r\n\r\nconst PersonalBlog: React.FunctionComponent<PersonalBlogProps> = ({\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PersonalBlogWrapper {...props}>\r\n      <Intro />\r\n      <Posts />\r\n    </PersonalBlogWrapper>\r\n  )\r\n}\r\n\r\nexport default PersonalBlog\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport HomePage from \"../containers/HomePage\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst PersonalBlogPage = (props: any) => {\r\n  const { data } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={data.site.siteMetadata.title}\r\n        description={data.site.siteMetadata.description}\r\n      />\r\n      <HomePage />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PersonalBlogPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { fields: { draft: { eq: false } } } # add\r\n      ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMMM, YYYY [</span>]\", locale: \"es\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1170, quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primaryHover')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    color: ${themeGet('colors.textColor')};\r\n    border-radius: 50%;\r\n    background-color: #f3f3f3;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: ${themeGet('colors.primary', '#00b0ff')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div``;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Anterior\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Página ${currentPage} de ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Siguiente\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"sourceRoot":""}